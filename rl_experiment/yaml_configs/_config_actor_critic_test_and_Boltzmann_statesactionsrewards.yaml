environment_settings:
  sumo_start_config: ["sumo-gui", "-c", "./4RL-test/simple6nodes.sumocfg", '--start']
  sumo_start_config_cmd: ["sumo", "-c", "./4RL-test/simple6nodes.sumocfg", '--start']
  runtime_type: gui
  pre_steps: 10
  simulation_time: 1000
  data_save_type: pickle
  data_save_filepath: "test_data.pickle"
net_game_settings:
  model: 'PDG'
  agents:
    id_list: [0,1,2,3,4,5]
    edge_list: [(0,1),(0,3),(1,2),(1,4),(2,5),(3,4),(4,5)]
    A_mat: [[1,0],[1.5,0]]
agent_settings:
  J1:
    cross_id: J1
    tls_id: J1
    states:
      names: ['排队长度','当前相位剩余时间','当前交通相位序号','东进口边上的车辆数', '边的平均速度','边占有率','边等待时间','边旅行时间','边平均车辆长度', '东进口直行车道车辆数',
              '车道排队长度','车道平均速度','车道占有率','车道等待时间','车道旅行时间','车道平均车辆长度']
      types: {
        '排队长度': 'queue_count_edge',
        '当前相位剩余时间': 'remaining_phase_duration',
        '当前交通相位序号': 'phase_id',
        '东进口边上的车辆数': 'vehicle_number_edge',
        '边的平均速度': 'mean_speed_edge',
        '边占有率': 'occupancy_edge',
        '边等待时间': 'waiting_time_edge',
        '边旅行时间': 'travel_time_edge',
        '边平均车辆长度': 'ave_length_edge',
        '东进口直行车道车辆数': 'vehicle_number_lane',
        '车道排队长度': 'queue_count_lane',
        '车道平均速度': 'mean_speed_lane',
        '车道占有率': 'occupancy_lane',
        '车道等待时间': 'waiting_time_lane',
        '车道旅行时间': 'travel_time_lane',
        '车道平均车辆长度': 'ave_length_lane'
      }
      retrieve_para: {
        '排队长度': 'eJ2J1',
        '当前相位剩余时间': 'J1', # tls_id
        '当前交通相位序号': 'J1', # tls_id
        '东进口边上的车辆数': 'eJ2J1',
        '边的平均速度': 'eJ2J1',
        '边占有率': 'eJ2J1',
        '边等待时间': 'eJ2J1',
        '边旅行时间': 'eJ2J1',
        '边平均车辆长度': 'eJ2J1',
        '东进口直行车道车辆数': 'eDJ7J1_1',
        '车道排队长度': 'eDJ7J1_1',
        '车道平均速度': 'eDJ7J1_1',
        '车道占有率': 'eDJ7J1_1',
        '车道等待时间': 'eDJ7J1_1',
        '车道旅行时间': 'eDJ7J1_1',
        '车道平均车辆长度': 'eDJ7J1_1'
      }
    actions:
      names: ['保持不变', '切换到下一相位', 'J1路口变换到2相位','设置道路最大速度','设置车道最大速度','增加当前相位持续时间']
      types: {
        '保持不变': 'keep',
        '切换到下一相位': 'switch',
        'J1路口变换到2相位': 'switch_to_phase',
        '设置道路最大速度': 'set_max_speed_edge',
        '设置车道最大速度': 'set_max_speed_lane',
        '增加当前相位持续时间': 'add_phase_duration',
      }
      para: {
        '保持相位': '-1',
        '切换到下一相位': '0',
        'J1路口变换到2相位': 2,
        '设置道路最大速度': ['eJ2J1', 80],
        '设置车道最大速度': ['eJ2J1_1', 80],
        '增加当前相位持续时间': 10,
      }
    rewards:
      compute_type: 'single' # 'weighted' or 'compound'
      names: '路口总等待时间'
      types: {
        '路口总等待时间': 'sum_waiting_time',
      }
      retrieve_para: {
        '路口总等待时间': [ 'eDJ1J1', 'eJ2J1', 'eJ4J1', 'eJ1DJ7' ],
      }
    neighbors: [ 'J2', 'J4' ]
    rl_settings:
      learning_model:
        model: 'actor-critic'
        paras: {
          'alpha': 0.01
        }
      action_selection:
        model: 'Boltzmann'
        paras: {
            'temperature': 0.8
         }
  J2:
    cross_id: J2
    tls_id: J2
    states:
      names: ['东直排队','西直排队','南直排队','北直排队']
      types: {
        '东直排队': 'queue_count',
        '西直排队': 'queue_count',
        '南直排队': 'queue_count',
        '北直排队': 'queue_count'
      }
      retrieve_para: {
        '东直排队': 'eJ3J2',
        '西直排队': 'eJ1J2',
        '南直排队': 'eJ5J2',
        '北直排队': 'eDJ2J2'
      }
    actions:
      names: ['保持相位', '切换到下一相位']
      types: {
        '保持相位': 'keep',
        '切换到下一相位': 'switch',
      }
      para: {
        '保持相位': '-1',
        '切换到下一相位': '0',
      }
    rewards:
      compute_type: 'single' # 'weighted' or 'compound'
      names: '路口总排队长度'
      types: {
        '路口总排队长度': 'sum_queue_count',
      }
      retrieve_para: {
        '路口总排队长度': [ 'eDJ2J2', 'eJ3J2', 'eJ5J2', 'eJ1J2' ],
      }
    neighbors: [ 'J1', 'J3', 'J5' ]
    rl_settings:
      learning_model:
        model: 'actor-critic'
        paras: {
          'alpha': 0.01
        }
      action_selection:
        model: 'Boltzmann'
        paras: {
            'temperature': 0.8
         }
  J3:
    cross_id: J3
    tls_id: J3
    states:
      names: ['东直排队','西直排队','南直排队','北直排队']
      types: {
        '东直排队': 'queue_count',
        '西直排队': 'queue_count',
        '南直排队': 'queue_count',
        '北直排队': 'queue_count'
      }
      retrieve_para: {
        '东直排队': 'eDJ8J3',
        '西直排队': 'eJ2J3',
        '南直排队': 'eJ6J3',
        '北直排队': 'eDJ3J3'
      }
    actions:
      names: ['保持相位', '切换到下一相位']
      types: {
        '保持相位': 'keep',
        '切换到下一相位': 'switch',
      }
      para: {
        '保持相位': '-1',
        '切换到下一相位': '0',
      }
    rewards:
      compute_type: 'single' # 'weighted' or 'compound'
      names: '路口总旅行时间'
      types: {
        '路口总旅行时间': 'sum_travel_time',
      }
      retrieve_para: {
        '路口总旅行时间': [ 'eDJ3J3', 'eDJ8J3', 'eJ6J3', 'eJ2J3' ],
      }
    neighbors: [ 'J2', 'J6' ]
    rl_settings:
      learning_model:
        model: 'actor-critic'
        paras: {
          'alpha': 0.01
        }
      action_selection:
        model: 'Boltzmann'
        paras: {
            'temperature': 0.8
         }
  J4:
    cross_id: J4
    tls_id: J4
    states:
      names: ['东直排队','西直排队','南直排队','北直排队']
      types: {
        '东直排队': 'queue_count',
        '西直排队': 'queue_count',
        '南直排队': 'queue_count',
        '北直排队': 'queue_count'
      }
      retrieve_para: {
        '东直排队': 'eJ5J4',
        '西直排队': 'eDJ9J4',
        '南直排队': 'eDJ4J4',
        '北直排队': 'eJ1J4'
      }
    actions:
      names: ['保持相位', '切换到下一相位']
      types: {
        '保持相位': 'keep',
        '切换到下一相位': 'switch',
      }
      para: {
        '保持相位': '-1',
        '切换到下一相位': '0',
      }
    rewards:
      compute_type: 'single' # 'weighted' or 'compound'
      names: '路口总占有率'
      types: {
        '路口总占有率': 'sum_occupancy',
      }
      retrieve_para: {
        '路口总占有率': [ 'eJ1J4', 'eJ5J4', 'eDJ4J4', 'eDJ9J4' ],
      }
    neighbors: [ 'J1', 'J5' ]
    rl_settings:
      learning_model:
        model: 'actor-critic'
        paras: {
          'alpha': 0.01
        }
      action_selection:
        model: 'Boltzmann'
        paras: {
            'temperature': 0.8
         }
  J5:
    cross_id: J5
    tls_id: J6
    states:
      names: ['东直排队','西直排队','南直排队','北直排队']
      types: {
        '东直排队': 'queue_count',
        '西直排队': 'queue_count',
        '南直排队': 'queue_count',
        '北直排队': 'queue_count'
      }
      retrieve_para: {
        '东直排队': 'eJ6J5',
        '西直排队': 'eJ4J5',
        '南直排队': 'eDJ5J5',
        '北直排队': 'eJ2J5'
      }
    actions:
      names: ['保持相位', '切换到下一相位']
      types: {
        '保持相位': 'keep',
        '切换到下一相位': 'switch',
      }
      para: {
        '保持相位': '-1',
        '切换到下一相位': '0',
      }
    rewards:
      compute_type: 'single' # 'weighted' or 'compound'
      names: '路口平均速度'
      types: {
        '路口平均速度': 'ave_mean_speed',
      }
      retrieve_para: {
        '路口平均速度': [ 'eJ2J5', 'eJ6J5', 'eDJ5J5', 'eJ4J5' ],
      }
    neighbors: [ 'J2', 'J4', 'J6' ]
    rl_settings:
      learning_model:
        model: 'actor-critic'
        paras: {
          'alpha': 0.01
        }
      action_selection:
        model: 'Boltzmann'
        paras: {
            'temperature': 0.8
         }
  J6:
    cross_id: J6
    tls_id: J6
    states:
      names: ['东直排队','西直排队','南直排队','北直排队']
      types: {
        '东直排队': 'queue_count',
        '西直排队': 'queue_count',
        '南直排队': 'queue_count',
        '北直排队': 'queue_count'
      }
      retrieve_para: {
        '东直排队': 'eDJ10J6',
        '西直排队': 'eJ5J6',
        '南直排队': 'eDJ6J6',
        '北直排队': 'eJ3J6'
      }
    actions:
      names: ['保持相位', '切换到下一相位']
      types: {
        '保持相位': 'keep',
        '切换到下一相位': 'switch',
      }
      para: {
        '保持相位': '-1',
        '切换到下一相位': '0',
      }
    rewards:
      compute_type: 'single' # 'weighted' or 'compound'
      names: '路口所有道路平均车辆长度'
      types: {
        '路口所有道路平均车辆长度': 'ave_length',
      }
      retrieve_para: {
        '路口所有道路平均车辆长度': [ 'eJ3J6', 'eDJ10J6', 'eDJ6J6', 'eJ5J6' ],
      }
    neighbors: [ 'J3', 'J5' ]
    rl_settings:
      learning_model:
        model: 'actor-critic'
        paras: {
          'alpha': 0.01
        }
      action_selection:
        model: 'Boltzmann'
        paras: {
            'temperature': 0.8
         }